// <auto-generated />
using System;
using FlowMe.EFCore.Demo;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FlowMe.EFCore.Demo.Migrations
{
    [DbContext(typeof(DemoDbContext))]
    [Migration("20191217111926_demo")]
    partial class demo
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0");

            modelBuilder.Entity("FlowMe.Persistence.Entity.ProcDef", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("TEXT");

                    b.Property<string>("BpmnDefContent")
                        .IsRequired()
                        .HasColumnName("BPMN_DEF_CONTENT")
                        .HasColumnType("TEXT")
                        .HasMaxLength(5000);

                    b.Property<string>("Description")
                        .HasColumnName("DESCRIPTION")
                        .HasColumnType("TEXT")
                        .HasMaxLength(2000);

                    b.Property<bool>("Enable")
                        .HasColumnName("ENABLE")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ProcName")
                        .IsRequired()
                        .HasColumnName("PROC_NAME")
                        .HasColumnType("TEXT")
                        .HasMaxLength(200);

                    b.Property<int>("Version")
                        .HasColumnName("VERSION")
                        .HasColumnType("INTEGER")
                        .HasMaxLength(5);

                    b.HasKey("Id");

                    b.ToTable("FM_PROC_DEF");
                });

            modelBuilder.Entity("FlowMe.Persistence.Entity.ProcInst", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("FinishTime")
                        .HasColumnName("FINISH_TIME")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("PROC_DEF_REF")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartTime")
                        .HasColumnName("START_TIME")
                        .HasColumnType("TEXT");

                    b.Property<string>("StartUser")
                        .IsRequired()
                        .HasColumnName("START_USER")
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("PROC_DEF_REF");

                    b.ToTable("FM_PROC_INST");
                });

            modelBuilder.Entity("FlowMe.Persistence.Entity.ProcTask", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CompleteTime")
                        .HasColumnName("COMPLETE_TIME")
                        .HasColumnType("TEXT");

                    b.Property<string>("Executor")
                        .HasColumnName("EXECUTOR")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("PROC_INST_REF")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ReceiveTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Receiver")
                        .IsRequired()
                        .HasColumnName("RECEIVER")
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<string>("TaskName")
                        .IsRequired()
                        .HasColumnName("TASK_NAME")
                        .HasColumnType("TEXT")
                        .HasMaxLength(200);

                    b.Property<string>("TaskType")
                        .IsRequired()
                        .HasColumnName("TASK_TYPE")
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("PROC_INST_REF");

                    b.ToTable("FM_PROC_TASK");
                });

            modelBuilder.Entity("FlowMe.Persistence.Entity.ProcVar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("TEXT");

                    b.Property<string>("JsonVar")
                        .IsRequired()
                        .HasColumnName("JSON_VAR")
                        .HasColumnType("TEXT")
                        .HasMaxLength(1000);

                    b.Property<Guid?>("ProcInstRefId")
                        .HasColumnType("TEXT");

                    b.Property<string>("VarType")
                        .HasColumnName("VAR_TYPE")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ProcInstRefId");

                    b.ToTable("FM_PROC_VAR");
                });

            modelBuilder.Entity("FlowMe.Persistence.Entity.ProcInst", b =>
                {
                    b.HasOne("FlowMe.Persistence.Entity.ProcDef", "ProcDefRef")
                        .WithMany()
                        .HasForeignKey("PROC_DEF_REF");
                });

            modelBuilder.Entity("FlowMe.Persistence.Entity.ProcTask", b =>
                {
                    b.HasOne("FlowMe.Persistence.Entity.ProcInst", "ProcInstRef")
                        .WithMany()
                        .HasForeignKey("PROC_INST_REF");
                });

            modelBuilder.Entity("FlowMe.Persistence.Entity.ProcVar", b =>
                {
                    b.HasOne("FlowMe.Persistence.Entity.ProcInst", "ProcInstRef")
                        .WithMany()
                        .HasForeignKey("ProcInstRefId");
                });
#pragma warning restore 612, 618
        }
    }
}
